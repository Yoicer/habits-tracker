#!/bin/bash

# üîç Verificador de Estado PWA
# Verifica que todos los archivos necesarios est√©n presentes y correctos

echo "üîç VERIFICANDO ESTADO DE LA PWA 'MIS H√ÅBITOS'"
echo "=============================================="

cd /var/www/html/habit

# Verificar archivos principales
echo ""
echo "üìÅ ARCHIVOS PRINCIPALES:"
files=("index.html" "styles.css" "script.js" "manifest.json" "sw.js")
for file in "${files[@]}"; do
    if [[ -f "$file" ]]; then
        size=$(stat -c%s "$file")
        echo "   ‚úÖ $file (${size} bytes)"
    else
        echo "   ‚ùå $file - NO ENCONTRADO"
    fi
done

# Verificar archivos de configuraci√≥n
echo ""
echo "‚öôÔ∏è CONFIGURACI√ìN FIREBASE:"
config_files=("firebase.json" ".firebaserc" "package.json")
for file in "${config_files[@]}"; do
    if [[ -f "$file" ]]; then
        echo "   ‚úÖ $file"
    else
        echo "   ‚ùå $file - NO ENCONTRADO"
    fi
done

# Verificar iconos PWA
echo ""
echo "üñºÔ∏è ICONOS PWA:"
if [[ -d "icons" ]]; then
    icon_count=$(ls icons/*.png 2>/dev/null | wc -l)
    echo "   ‚úÖ Directorio icons/ existe"
    echo "   ‚úÖ $icon_count iconos encontrados:"
    for icon in icons/*.png; do
        if [[ -f "$icon" ]]; then
            size=$(stat -c%s "$icon")
            echo "      ‚Ä¢ $(basename $icon) (${size} bytes)"
        fi
    done
else
    echo "   ‚ùå Directorio icons/ no encontrado"
fi

# Verificar documentaci√≥n
echo ""
echo "üìö DOCUMENTACI√ìN:"
docs=("README.md" "FIREBASE-DEPLOY.md" "DEPLOY-GUIDE.md")
for doc in "${docs[@]}"; do
    if [[ -f "$doc" ]]; then
        lines=$(wc -l < "$doc")
        echo "   ‚úÖ $doc ($lines l√≠neas)"
    else
        echo "   ‚ùå $doc - NO ENCONTRADO"
    fi
done

# Verificar servidor local
echo ""
echo "üåê SERVIDOR LOCAL:"
if pgrep -f "python3 -m http.server 8080" > /dev/null; then
    echo "   ‚úÖ Servidor HTTP ejecut√°ndose en puerto 8080"
    echo "   üåç URL: http://localhost:8080"
else
    echo "   ‚ùå Servidor HTTP no est√° ejecut√°ndose"
fi

# Verificar Node.js y Firebase CLI
echo ""
echo "üõ†Ô∏è HERRAMIENTAS DE DESARROLLO:"
if command -v node >/dev/null 2>&1; then
    node_version=$(node --version 2>/dev/null || echo "No disponible")
    echo "   ‚úÖ Node.js: $node_version"
else
    echo "   ‚ùå Node.js no encontrado"
fi

if source ~/.nvm/nvm.sh && command -v firebase >/dev/null 2>&1; then
    firebase_version=$(source ~/.nvm/nvm.sh && firebase --version 2>/dev/null || echo "No disponible")
    echo "   ‚úÖ Firebase CLI: $firebase_version"
else
    echo "   ‚ùå Firebase CLI no encontrado"
fi

# Resumen final
echo ""
echo "üìä RESUMEN:"
echo "============"

total_files=$(ls -1 *.html *.css *.js *.json *.md 2>/dev/null | wc -l)
echo "üìÑ Archivos principales: $total_files"

if [[ -d "icons" ]]; then
    icon_files=$(ls icons/*.png 2>/dev/null | wc -l)
    echo "üñºÔ∏è Iconos PWA: $icon_files"
fi

echo ""
echo "üéØ PR√ìXIMO PASO:"
echo "=================="
echo "1. Completa la autenticaci√≥n Firebase:"
echo "   firebase login --no-localhost"
echo ""
echo "2. Despliega la aplicaci√≥n:"
echo "   firebase deploy --only hosting"
echo ""
echo "3. O lee la gu√≠a completa:"
echo "   cat DEPLOY-GUIDE.md"
echo ""
echo "‚ú® ¬°Tu PWA est√° lista para el despliegue!"
